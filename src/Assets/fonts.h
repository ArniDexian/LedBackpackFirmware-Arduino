#ifndef FONTS_H
#define FONTS_H

#include "Arduino.h"

// this font containts symbols: ["Q", "W", "E", "R", "T", "Y", "U", "I", "O", "P", "A", "S", "D", "F", "G", "H", "J", "K", "L", "Z", "X", "C", "V", "B", "N", "M", ",", ".", "!", "?", "(", ")", ":", "#", "%", "^", "*", "-", "=", "_", "+", "{", "}", "[", "]", ";", "\'", "|", "/", ">", "<", "~"]
const uint8_t font5x5[] PROGMEM = {
    // bit height, bit width, glyphs count
    0x05, 0x05, 0x34,
    //The format is 1 byte ASCII symbol code + 4 bytes per glyph:
    //char 'Q'
    0x51, 0xE5, 0x29, 0xC1, 0x00,
    //char 'W'
    0x57, 0x8D, 0x6B, 0x55, 0x00,
    //char 'E'
    0x45, 0xE4, 0x31, 0x0E, 0x00,
    //char 'R'
    0x52, 0xE5, 0x39, 0x8A, 0x00,
    //char 'T'
    0x54, 0xE2, 0x10, 0x84, 0x00,
    //char 'Y'
    0x59, 0xA5, 0x38, 0x84, 0x00,
    //char 'U'
    0x55, 0xA5, 0x29, 0x4E, 0x00,
    //char 'I'
    0x49, 0x84, 0x21, 0x08, 0x00,
    //char 'O'
    0x4F, 0xE5, 0x29, 0x4E, 0x00,
    //char 'P'
    0x50, 0xE5, 0x39, 0x08, 0x00,
    //char 'A'
    0x41, 0x45, 0x29, 0xCA, 0x00,
    //char 'S'
    0x53, 0x64, 0x10, 0x4C, 0x00,
    //char 'D'
    0x44, 0xC5, 0x29, 0x4C, 0x00,
    //char 'F'
    0x46, 0xE4, 0x39, 0x08, 0x00,
    //char 'G'
    0x47, 0x64, 0x21, 0x46, 0x00,
    //char 'H'
    0x48, 0xA5, 0x39, 0x4A, 0x00,
    //char 'J'
    0x4A, 0x21, 0x09, 0x4E, 0x00,
    //char 'K'
    0x4B, 0xA5, 0x31, 0x4A, 0x00,
    //char 'L'
    0x4C, 0x84, 0x21, 0x0E, 0x00,
    //char 'Z'
    0x5A, 0xE1, 0x11, 0x0E, 0x00,
    //char 'X'
    0x58, 0xA5, 0x11, 0x4A, 0x00,
    //char 'C'
    0x43, 0x45, 0x21, 0x44, 0x00,
    //char 'V'
    0x56, 0xA5, 0x29, 0x44, 0x00,
    //char 'B'
    0x42, 0xC5, 0x31, 0x4C, 0x00,
    //char 'N'
    0x4E, 0x94, 0xB5, 0x69, 0x00,
    //char 'M'
    0x4D, 0x8E, 0xEB, 0x18, 0x80,
    //char ','
    0x2C, 0x00, 0x01, 0x08, 0x00,
    //char '.'
    0x2E, 0x00, 0x00, 0x08, 0x00,
    //char '!'
    0x21, 0x84, 0x20, 0x08, 0x00,
    //char '?'
    0x3F, 0x82, 0x20, 0x08, 0x00,
    //char '('
    0x28, 0x44, 0x21, 0x04, 0x00,
    //char ')'
    0x29, 0x82, 0x10, 0x88, 0x00,
    //char ':'
    0x3A, 0x04, 0x01, 0x00, 0x00,
    //char '#'
    0x23, 0x57, 0xD5, 0xF5, 0x00,
    //char '%'
    0x25, 0xA1, 0x39, 0x0A, 0x00,
    //char '^'
    0x5E, 0x45, 0x00, 0x00, 0x00,
    //char '*'
    0x2A, 0xA2, 0x28, 0x00, 0x00,
    //char '-'
    0x2D, 0x00, 0x30, 0x00, 0x00,
    //char '='
    0x3D, 0x06, 0x01, 0x80, 0x00,
    //char '_'
    0x5F, 0x00, 0x00, 0x0C, 0x00,
    //char '+'
    0x2B, 0x02, 0x38, 0x80, 0x00,
    //char '{'
    0x7B, 0x42, 0x20, 0x84, 0x00,
    //char '}'
    0x7D, 0x84, 0x11, 0x08, 0x00,
    //char '['
    0x5B, 0xC4, 0x21, 0x0C, 0x00,
    //char ']'
    0x5D, 0xC2, 0x10, 0x8C, 0x00,
    //char ';'
    0x3B, 0x04, 0x01, 0x08, 0x00,
    //char '''
    0x27, 0x84, 0x00, 0x00, 0x00,
    //char '|'
    0x7C, 0x84, 0x21, 0x08, 0x00,
    //char '/'
    0x2F, 0x21, 0x11, 0x08, 0x00,
    //char '>'
    0x3E, 0x04, 0x11, 0x00, 0x00,
    //char '<'
    0x3C, 0x02, 0x20, 0x80, 0x00,
    //char '~'
    0x7E, 0x00, 0x15, 0x40, 0x00
};

#endif